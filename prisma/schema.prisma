// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id       String @id
  username String @unique
}

model Student {
  id        String   @id
  username  String   @unique
  name      String
  surname   String
  email     String?
  phone     String?
  adress    String
  img       String
  bloodType String
  sex       UserSex
  createdAt DateTime @default(now())
  parentId  String
  parent    Parent   @relation(fields: [parentId], references: [id])
}

model Teacher {
  id        String    @id
  username  String    @unique
  name      String
  surname   String
  email     String?
  phone     String?
  adress    String
  img       String
  bloodType String
  sex       UserSex
  createdAt DateTime  @default(now())
  subjects  Subject[]
  lessons Lesson[]
}

model Parent {
  id        String    @id
  username  String    @unique
  name      String
  surname   String
  email     String?
  phone     String?
  adress    String
  createdAt DateTime  @default(now())
  stundents Student[]
}

//
// model Grade {
  model Class{
   id   Int    @id @default(autoincrement())
   name String @unique
   capacity Int
   lessons Lesson[]
   supervisorId String
   supervisor Teacher @relation(fields: [supervisorId],references: [id])
   student Student[]

  }
//
model Subject {
  id   Int    @id @default(autoincrement())
  name String @unique
  tachers Teacher[]
  lessons Lesson[]
}

enum Day {
    MONDAY,
    TUESDAY,
    WEDNESDAY,
    THURSDAY,
    FRIDAY
}

  model Lesson {
    name String
    day Day
    startTime DateTime
    endTime DateTime
    subjectId Int
    subject Subject @relation(fields:[subjectId], references:[id])
    teacherId Int
    teacher Teacher @relation(fields:[teacherId],references: [id])
  }

//
//   model Lesson{}
//
//   model Exam{}
//
//   model Assignment{}
//
//   model Result{}
//
//   model Attendance{}

enum UserSex {
  MALE
  FEMALE
}
